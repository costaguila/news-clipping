{"ast":null,"code":"var _jsxFileName = \"/home/developer/projetos/python/news-clipping/news-clipping/src/components/news/NewsList.js\";\nimport React, { Component } from 'react';\nimport NewsItem from './News_item';\nimport SearchBar from '../searchbar/SearchBar';\nimport { getNews, getNewsSource } from '../../services/newsService';\n\nclass NewsList extends Component {\n  constructor(props) {\n    super(props);\n    let fontes = getNewsSource();\n    this.state = {\n      fontes: fontes,\n      fontesFiltradas: fontes,\n      itens: getNews(),\n      searchbar: props.searchbar ? props.searchbar : true\n    };\n  }\n\n  getFonteName(title) {\n    return title ? title : 'Nao informado';\n  }\n\n  filterListas(name) {\n    if (name !== \"\") {\n      let filtro = this.state.fontes.filter(x => x.title.toUpperCase().match(name.toUpperCase()));\n      this.setState({\n        fontesFiltradas: filtro\n      });\n    } else {\n      this.setState({\n        fontesFiltradas: this.state.fontes\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      key: \"listaDeNoticias\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(SearchBar, {\n      filterListas: this.filterListas.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), this.state.fontesFiltradas.map(fonte => React.createElement(\"div\", {\n      className: \"newsSource\",\n      key: fonte.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"newssourceHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"# \", this.getFonteName(fonte.title))), React.createElement(\"div\", {\n      className: \"newssourceContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, this.state.itens.filter(noticias => noticias.id === fonte.id).map(item => React.createElement(NewsItem, {\n      item: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default NewsList;","map":{"version":3,"sources":["/home/developer/projetos/python/news-clipping/news-clipping/src/components/news/NewsList.js"],"names":["React","Component","NewsItem","SearchBar","getNews","getNewsSource","NewsList","constructor","props","fontes","state","fontesFiltradas","itens","searchbar","getFonteName","title","filterListas","name","filtro","filter","x","toUpperCase","match","setState","render","bind","map","fonte","id","noticias","item"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AAEA,SAASC,OAAT,EAAkBC,aAAlB,QAAuC,4BAAvC;;AAEA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAE7BM,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,QAAIC,MAAM,GAAGJ,aAAa,EAA1B;AACA,SAAKK,KAAL,GAAa;AACTD,MAAAA,MAAM,EAAEA,MADC;AAETE,MAAAA,eAAe,EAAEF,MAFR;AAGTG,MAAAA,KAAK,EAAER,OAAO,EAHL;AAITS,MAAAA,SAAS,EAAEL,KAAK,CAACK,SAAN,GAAiBL,KAAK,CAACK,SAAvB,GAAmC;AAJrC,KAAb;AAMH;;AAEDC,EAAAA,YAAY,CAACC,KAAD,EAAO;AACf,WAAOA,KAAK,GAAGA,KAAH,GAAW,eAAvB;AACH;;AAEDC,EAAAA,YAAY,CAACC,IAAD,EAAO;AACf,QAAIA,IAAI,KAAK,EAAb,EAAgB;AACZ,UAAIC,MAAM,GAAG,KAAKR,KAAL,CAAWD,MAAX,CAAkBU,MAAlB,CAAyBC,CAAC,IAAIA,CAAC,CAACL,KAAF,CAAQM,WAAR,GAAsBC,KAAtB,CAA4BL,IAAI,CAACI,WAAL,EAA5B,CAA9B,CAAb;AACA,WAAKE,QAAL,CAAe;AAACZ,QAAAA,eAAe,EAAEO;AAAlB,OAAf;AACH,KAHD,MAGK;AACD,WAAKK,QAAL,CAAe;AAACZ,QAAAA,eAAe,EAAE,KAAKD,KAAL,CAAWD;AAA7B,OAAf;AACH;AACJ;;AAEDe,EAAAA,MAAM,GAAE;AACJ,WACI;AAAK,MAAA,GAAG,EAAC,iBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAW,MAAA,YAAY,EAAE,KAAKR,YAAL,CAAkBS,IAAlB,CAAuB,IAAvB,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEK,KAAKf,KAAL,CAAWC,eAAX,CAA2Be,GAA3B,CAA+BC,KAAK,IACjC;AAAK,MAAA,SAAS,EAAC,YAAf;AAA4B,MAAA,GAAG,EAAEA,KAAK,CAACC,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAO,KAAKd,YAAL,CAAkBa,KAAK,CAACZ,KAAxB,CAAP,CAAlC,CADJ,EAEI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKL,KAAL,CAAWE,KAAX,CACIO,MADJ,CACWU,QAAQ,IAAIA,QAAQ,CAACD,EAAT,KAAgBD,KAAK,CAACC,EAD7C,EAEIF,GAFJ,CAEQI,IAAI,IAAK,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAEA,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFjB,CADL,CAFJ,CADH,CAFL,CADJ;AAiBH;;AA5C4B;;AA+CjC,eAAexB,QAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport NewsItem from './News_item';\nimport SearchBar from '../searchbar/SearchBar';\n\nimport { getNews, getNewsSource } from '../../services/newsService';\n\nclass NewsList extends Component {\n\n    constructor(props){\n        super(props)\n        let fontes = getNewsSource();\n        this.state = {\n            fontes: fontes,\n            fontesFiltradas: fontes,\n            itens: getNews(),\n            searchbar: props.searchbar? props.searchbar : true\n        }\n    }\n\n    getFonteName(title){\n        return title ? title : 'Nao informado'\n    }\n\n    filterListas(name) {\n        if (name !== \"\"){\n            let filtro = this.state.fontes.filter(x => x.title.toUpperCase().match(name.toUpperCase()));\n            this.setState( {fontesFiltradas: filtro} );\n        }else{\n            this.setState( {fontesFiltradas: this.state.fontes} );\n        }\n    }\n\n    render(){\n        return (\n            <div key='listaDeNoticias'>\n                <SearchBar filterListas={this.filterListas.bind(this)} />\n                {this.state.fontesFiltradas.map(fonte =>(\n                    <div className=\"newsSource\" key={fonte.id} >\n                        <div className=\"newssourceHeader\"><h1># {this.getFonteName(fonte.title)}</h1></div>\n                        <div className=\"newssourceContainer\">\n                            {this.state.itens\n                                .filter(noticias => noticias.id === fonte.id)\n                                .map(item => (<NewsItem item={item}/>))\n                            }\n                        </div>\n                    </div>\n                    ))\n                }\n            </div>\n        )\n    }\n}\n\nexport default NewsList;\n"]},"metadata":{},"sourceType":"module"}